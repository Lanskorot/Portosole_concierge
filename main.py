import telebot
from telebot import types
import test2


bot = test2.bot
TARGET_USER_CHAT_ID = test2.TARGET_USER_CHAT_ID

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_language = {}
choise = []
sending_message = []

def send_to_admin(message):
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –æ–ø—Ü–∏—è—Ö
    bot.send_message(TARGET_USER_CHAT_ID , message)


@bot.message_handler(commands=['start', 'main', 'hello'])
def main(message):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Crnogorski  üá≤üá™', callback_data='montenegrin'))
    markup.add(types.InlineKeyboardButton('–°—Ä–ø—Å–∫–∏ üá∑üá∏', callback_data='serbian'))
    markup.add(types.InlineKeyboardButton('English üá∫üá∏', callback_data='english'))
    markup.add(types.InlineKeyboardButton('–†—É—Å—Å–∫–∏–π üá∑üá∫', callback_data='russian'))
    markup.add(types.InlineKeyboardButton('Deutsch üá©üá™', callback_data='german'))
    markup.add(types.InlineKeyboardButton('Espa√±ol üá™üá∏', callback_data='spanish'))
    markup.add(types.InlineKeyboardButton('Francus üá´üá∑', callback_data='francus'))
    markup.add(types.InlineKeyboardButton('Polski üáµüá±', callback_data='polski'))

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫
    bot.send_message(message.chat.id, f'Hello Mr/Ms {message.from_user.first_name} {message.from_user.last_name}\n'
                                      'Please choose your language', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def handle_query(call):
    global sending_message
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –¥–∞–Ω–Ω—ã–º callback_data
    if call.data in ['english', 'russian', 'german', 'spanish', 'serbian', 'montenegrin', 'francus', 'polski']:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_language[call.message.chat.id] = call.data

        # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
        if call.data == 'english':
            bot.send_message(call.message.chat.id, 'You chose English!')
        elif call.data == 'russian':
            bot.send_message(call.message.chat.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ä—É—Å—Å–∫–∏–π!')
        elif call.data == 'german':
            bot.send_message(call.message.chat.id, 'Sie haben Deutsch gew√§hlt!')
        elif call.data == 'spanish':
            bot.send_message(call.message.chat.id, '¬°Has elegido espa√±ol!')
        elif call.data == 'serbian':
            bot.send_message(call.message.chat.id, 'Izabrali ste srpski jezik!')
        elif call.data == 'montenegrin':
            bot.send_message(call.message.chat.id, 'Izabrali ste crnogorski!')
        elif call.data == 'francus':
            bot.send_message(call.message.chat.id, 'Vous avez choisi le fran√ßais!')
        elif call.data == 'polski':
            bot.send_message(call.message.chat.id, 'Wybra≈Çe≈õ jƒôzyk polski!')

        # –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É
        room(call.message)
    elif call.data.startswith('room_'):
        lang = user_language.get(call.message.chat.id, 'english')
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –Ω–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã
        if lang == 'english':
            bot.send_message(call.message.chat.id, f'You selected room {call.data}')
        elif lang == 'russian':
            bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–Ω–∞—Ç—É {call.data}')
        elif lang == 'german':
            bot.send_message(call.message.chat.id, f'Sie haben Zimmer {call.data} ausgew√§hlt')
        elif lang == 'spanish':
            bot.send_message(call.message.chat.id, f'Has seleccionado la habitaci√≥n {call.data}')
        elif lang == 'serbian':
            bot.send_message(call.message.chat.id, f'Izabrali ste sobu {call.data}')
        elif lang == 'montenegrin':
            bot.send_message(call.message.chat.id, f'Izabrali ste sobu {call.data}')
        elif lang == 'francus':
            bot.send_message(call.message.chat.id, f'Vous avez s√©lectionn√© la chambre {call.data}')
        elif lang == 'polski':
            bot.send_message(call.message.chat.id, f'Wybra≈Çe≈õ pok√≥j {call.data}')

        sending_message.append(call.data.split('_')[1])

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–æ–º–Ω–∞—Ç—ã
        choose_problem(call.message)

    elif call.data == '–ö–ª–∏–Ω–∏–Ω–≥':
        clean(call)
    elif call.data == '–¢–µ—Ö–Ω–∏–∫':
        technical_problems(call)
    elif call.data == '–†–µ—Å–µ–ø—à–Ω':
        reception(call)
    elif call.data == '–°–æ–æ–±—â–µ–Ω–∏–µ':
        handle_special_query(call)

    elif call.data == 'new_order':
        main(call.message)

    if call.data != 'new_order' and not call.data.startswith('room_'):
        sending_message.append(call.data)

    if len(sending_message) > 3:
        send_to_admin(f'–í –∫–æ–º–Ω–∞—Ç—É {sending_message[1]} –Ω—É–∂–Ω–æ: –ö—Ç–æ –¥–µ–ª–∞–µ—Ç -  {sending_message[2]}, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å - {sending_message[3]}')
        print(sending_message)
        sending_message = []
        one_more_time(call.message, user_language.get(call.message.chat.id, 'english'))


@bot.message_handler()
def one_more_time(message, language):
    thanks_messages = {
        'english': 'Thank you for your request, we will resolve your issue soon.',
        'russian': '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –º—ã —Ä–µ—à–∏–º –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
        'german': 'Danke f√ºr Ihre Anfrage, wir werden Ihr Problem bald l√∂sen.',
        'spanish': 'Gracias por su solicitud, resolveremos su problema pronto.',
        'serbian': 'Hvala na va≈°em zahtevu, re≈°iƒáemo va≈° problem uskoro.',
        'montenegrin': 'Hvala na va≈°em zahtevu, re≈°iƒáemo va≈° problem uskoro.',
        'french': 'Merci pour votre demande, nous r√©soudrons votre probl√®me bient√¥t.',
        'polish': 'Dziƒôkujemy za Twoje zg≈Çoszenie, wkr√≥tce rozwiƒÖ≈ºemy Tw√≥j problem.'
    }
    bot.send_message(message.chat.id,
                     thanks_messages.get(language, 'Thank you for your request, we will resolve your issue soon.'))

    button_texts = {
        'english': 'If you want to make a new request, press this button',
        'russian': '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ —ç—Ç—É –∫–Ω–æ–ø–∫—É',
        'german': 'Wenn Sie eine neue Anfrage stellen m√∂chten, dr√ºcken Sie diese Taste',
        'spanish': 'Si quieres hacer una nueva solicitud, presiona este bot√≥n',
        'serbian': 'Ako ≈æelite da podnesete novi zahtev, pritisnite ovo dugme',
        'montenegrin': 'Ako ≈æelite podnijeti novi zahtjev, pritisnite ovo dugme',
        'french': 'Si vous voulez faire une nouvelle demande, appuyez sur ce bouton',
        'polish': 'Je≈õli chcesz z≈Ço≈ºyƒá nowe zg≈Çoszenie, naci≈õnij ten przycisk'
    }

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton('New',
                                   callback_data='new_order'))

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–ø—Ä–æ—Å–æ–º –æ –Ω–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    bot.send_message(message.chat.id,
                     button_texts.get(language, 'If you want to make a new request, press this button'),
                     reply_markup=markup)


@bot.message_handler()
def room(message):
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–º–µ—Ä–∞ –∫–æ–º–Ω–∞—Ç—ã
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton('101', callback_data='room_101'),
        types.InlineKeyboardButton('102', callback_data='room_102'),
        types.InlineKeyboardButton('103', callback_data='room_103'),
        types.InlineKeyboardButton('104', callback_data='room_104')
    )

    # –≠—Ç–∞–∂ 2
    markup.row(
        types.InlineKeyboardButton('201', callback_data='room_201'),
        types.InlineKeyboardButton('202', callback_data='room_202'),
        types.InlineKeyboardButton('203', callback_data='room_203'),
        types.InlineKeyboardButton('204', callback_data='room_204')
    )

    # –≠—Ç–∞–∂ 3
    markup.row(
        types.InlineKeyboardButton('301', callback_data='room_301'),
        types.InlineKeyboardButton('302', callback_data='room_302'),
        types.InlineKeyboardButton('303', callback_data='room_303'),
        types.InlineKeyboardButton('304', callback_data='room_304')
    )

    # –≠—Ç–∞–∂ 4
    markup.row(
        types.InlineKeyboardButton('401', callback_data='room_401'),
        types.InlineKeyboardButton('402', callback_data='room_402'),
        types.InlineKeyboardButton('403', callback_data='room_403'),
        types.InlineKeyboardButton('404', callback_data='room_404')
    )

    # –≠—Ç–∞–∂ 5
    markup.row(
        types.InlineKeyboardButton('501', callback_data='room_501'),
        types.InlineKeyboardButton('502', callback_data='room_502'),
        types.InlineKeyboardButton('503', callback_data='room_503')
    )

    # –≠—Ç–∞–∂ 6
    markup.row(
        types.InlineKeyboardButton('601', callback_data='room_601'),
        types.InlineKeyboardButton('602', callback_data='room_602'),
        types.InlineKeyboardButton('603', callback_data='room_603')
    )

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(message.chat.id, 'english')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    if lang == 'english':
        bot.send_message(message.chat.id, 'Please choose your room number:', reply_markup=markup)
    elif lang == 'russian':
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã:', reply_markup=markup)
    elif lang == 'german':
        bot.send_message(message.chat.id, 'Bitte w√§hlen Sie Ihre Zimmernummer:', reply_markup=markup)
    elif lang == 'spanish':
        bot.send_message(message.chat.id, 'Por favor, selecciona tu n√∫mero de habitaci√≥n:', reply_markup=markup)
    elif lang == 'serbian':
        bot.send_message(message.chat.id, '–ú–æ–ª–∏–º–æ –≤–∞—Å –¥–∞ –∏–∑–∞–±–µ—Ä–µ—Ç–µ –±—Ä–æ—ò —Å–≤–æ—ò–µ —Å–æ–±–µ:', reply_markup=markup)
    elif lang == 'montenegrin':
        bot.send_message(message.chat.id, 'Molimo izaberite broj svoje sobe:', reply_markup=markup)
    elif lang == 'francus':
        bot.send_message(message.chat.id, 'Veuillez choisir votre num√©ro de chambre:', reply_markup=markup)
    elif lang == 'polski':
        bot.send_message(message.chat.id, 'Proszƒô wybraƒá numer swojego pokoju:', reply_markup=markup)


@bot.message_handler()
def choose_problem(message):
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(message.chat.id, 'english')

    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–±–ª–µ–º—ã
    markup = types.InlineKeyboardMarkup()

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if lang == 'english':
        markup.add(types.InlineKeyboardButton('Room cleaning', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Technical problems', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('General issues - reception', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('I want to describe the issue myself', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Please choose your issue:', reply_markup=markup)

    elif lang == 'russian':
        markup.add(types.InlineKeyboardButton('–£–±–æ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã - —Ä–µ—Å–µ–ø—à–Ω', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('–•–æ—á—É –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:', reply_markup=markup)

    elif lang == 'german':
        markup.add(types.InlineKeyboardButton('Zimmerreinigung', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Technische Probleme', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('Allgemeine Fragen - Rezeption', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('Ich m√∂chte das Problem selbst beschreiben', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Bitte w√§hlen Sie Ihr Problem:', reply_markup=markup)

    elif lang == 'spanish':
        markup.add(types.InlineKeyboardButton('Limpieza de habitaci√≥n', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Problemas t√©cnicos', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('Asuntos generales - recepci√≥n', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('Quiero describir el problema yo mismo', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Por favor, elige tu pregunta:', reply_markup=markup)

    elif lang == 'serbian':
        markup.add(types.InlineKeyboardButton('–ß–∏—à—õ–µ—ö–µ —Å–æ–±–µ', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('–¢–µ—Ö–Ω–∏—á–∫–∏ –ø—Ä–æ–±–ª–µ–º–∏', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('–û–ø—à—Ç–∞ –ø–∏—Ç–∞—ö–∞ - —Ä–µ—Ü–µ–ø—Ü–∏—ò–∞', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('–ñ–µ–ª–∏–º —Å–∞–º –æ–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–±–ª–µ–º', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, '–ú–æ–ª–∏–º–æ –∏–∑–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–±–ª–µ–º:', reply_markup=markup)

    elif lang == 'montenegrin':
        markup.add(types.InlineKeyboardButton('ƒåi≈°ƒáenje sobe', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Tehniƒçki problemi', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('Op≈°ta pitanja - recepcija', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('≈Ωelim sam opisati problem', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Molimo izaberite va≈° problem:', reply_markup=markup)

    elif lang == 'francus':
        markup.add(types.InlineKeyboardButton('Nettoyage de chambre', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Probl√®mes techniques', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('Questions g√©n√©rales - r√©ception', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('Je veux d√©crire le probl√®me moi-m√™me', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Veuillez choisir votre question:', reply_markup=markup)

    elif lang == 'polski':
        markup.add(types.InlineKeyboardButton('SprzƒÖtanie pokoju', callback_data='–ö–ª–∏–Ω–∏–Ω–≥'))
        markup.add(types.InlineKeyboardButton('Problemy techniczne', callback_data='–¢–µ—Ö–Ω–∏–∫'))
        markup.add(types.InlineKeyboardButton('Og√≥lne pytania - recepcja', callback_data='–†–µ—Å–µ–ø—à–Ω'))
        markup.add(types.InlineKeyboardButton('Chcƒô opisaƒá problem samodzielnie', callback_data='–°–æ–æ–±—â–µ–Ω–∏–µ'))
        bot.send_message(message.chat.id, 'Proszƒô wybraƒá swoje pytanie:', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == '–ö–ª–∏–Ω–∏–Ω–≥')
def clean(call):
    chat_id = call.message.chat.id
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —É–±–æ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞
    markup = types.InlineKeyboardMarkup()

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(chat_id, 'english')

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ–ø—Ü–∏–∏ —É–±–æ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if lang == 'english':
        markup.add(types.InlineKeyboardButton('Clean the room', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Change bed linen', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Please choose a cleaning option:', reply_markup=markup)

    elif lang == 'russian':
        markup.add(types.InlineKeyboardButton('–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é —É–±–æ—Ä–∫–∏ –Ω–æ–º–µ—Ä–∞:', reply_markup=markup)

    elif lang == 'german':
        markup.add(types.InlineKeyboardButton('Zimmer reinigen', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Bettw√§sche wechseln', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Bitte w√§hlen Sie eine Reinigungsoption:', reply_markup=markup)

    elif lang == 'spanish':
        markup.add(types.InlineKeyboardButton('Limpiar la habitaci√≥n', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Cambiar la ropa de cama', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Por favor, elige una opci√≥n de limpieza:', reply_markup=markup)

    elif lang == 'serbian':
        markup.add(types.InlineKeyboardButton('–û—á–∏—Å—Ç–∏—Ç–µ —Å–æ–±—É', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('–ü—Ä–æ–º–µ–Ω–∏—Ç–µ –ø–æ—Å—Ç–µ—ô–∏–Ω—É', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, '–ò–∑–∞–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—ò—É —á–∏—à—õ–µ—ö–∞ —Å–æ–±–µ:', reply_markup=markup)

    elif lang == 'montenegrin':
        markup.add(types.InlineKeyboardButton('Oƒçistiti sobu', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Promijeniti posteljinu', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Molimo vas da izaberete opciju ƒçi≈°ƒáenja sobe:', reply_markup=markup)

    elif lang == 'francus':
        markup.add(types.InlineKeyboardButton('Nettoyer la chambre', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Changer les draps', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Veuillez choisir une option de nettoyage:', reply_markup=markup)

    elif lang == 'polski':
        markup.add(types.InlineKeyboardButton('Wyczy≈õciƒá pok√≥j', callback_data='–£–±—Ä–∞—Ç—å—Å—è –≤ –Ω–æ–º–µ—Ä–µ'))
        markup.add(types.InlineKeyboardButton('Zmie≈Ñ po≈õciel', callback_data='–°–º–µ–Ω–∏—Ç—å –±–µ–ª—å–µ'))
        bot.send_message(chat_id, 'Proszƒô wybraƒá opcjƒô czyszczenia:', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
@bot.callback_query_handler(func=lambda call: call.data == '–¢–µ—Ö–Ω–∏–∫')
def technical_problems(call):
    chat_id = call.message.chat.id
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
    markup = types.InlineKeyboardMarkup()

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(chat_id, 'english')

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ–ø—Ü–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if lang == 'english':
        markup.add(types.InlineKeyboardButton('Lights not working', callback_data='Lights not working'))
        markup.add(types.InlineKeyboardButton('Door not opening', callback_data='Door not opening'))
        markup.add(types.InlineKeyboardButton('No water', callback_data='No water'))
        markup.add(types.InlineKeyboardButton('Air conditioner not working', callback_data='Air conditioner not working'))
        bot.send_message(chat_id, 'Please choose the technical issue:', reply_markup=markup)

    elif lang == 'russian':
        markup.add(types.InlineKeyboardButton('–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–≤–µ—Ç', callback_data='–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–≤–µ—Ç'))
        markup.add(types.InlineKeyboardButton('–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¥–≤–µ—Ä—å', callback_data='–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –¥–≤–µ—Ä—å'))
        markup.add(types.InlineKeyboardButton('–ù–µ—Ç –≤–æ–¥—ã', callback_data='–ù–µ—Ç –≤–æ–¥—ã'))
        markup.add(types.InlineKeyboardButton('–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', callback_data='–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä'))
        bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–±–ª–µ–º—É:', reply_markup=markup)

    elif lang == 'german':
        markup.add(types.InlineKeyboardButton('Licht funktioniert nicht', callback_data='Licht funktioniert nicht'))
        markup.add(types.InlineKeyboardButton('T√ºr √∂ffnet sich nicht', callback_data='T√ºr √∂ffnet sich nicht'))
        markup.add(types.InlineKeyboardButton('Wasser fehlt', callback_data='Wasser fehlt'))
        markup.add(types.InlineKeyboardButton('Klimaanlage funktioniert nicht',
                                              callback_data='Klimaanlage funktioniert nicht'))
        bot.send_message(chat_id, 'Bitte w√§hlen Sie das technische Problem:', reply_markup=markup)

    elif lang == 'spanish':
        markup.add(types.InlineKeyboardButton('No funciona la luz', callback_data='No funciona la luz'))
        markup.add(types.InlineKeyboardButton('No se abre la puerta', callback_data='No se abre la puerta'))
        markup.add(types.InlineKeyboardButton('No hay agua', callback_data='No hay agua'))
        markup.add(types.InlineKeyboardButton('No funciona el aire acondicionado',
                                              callback_data='No funciona el aire acondicionado'))
        bot.send_message(chat_id, 'Por favor, elige el problema t√©cnico:', reply_markup=markup)

    elif lang == 'serbian':
        markup.add(types.InlineKeyboardButton('–ù–µ —Ä–∞–¥–∏ —Å–≤–µ—Ç', callback_data='–ù–µ —Ä–∞–¥–∏ —Å–≤–µ—Ç'))
        markup.add(types.InlineKeyboardButton('–ù–µ –æ—Ç–≤–∞—Ä–∞ —Å–µ –≤—Ä–∞—Ç–∞', callback_data='–ù–µ –æ—Ç–≤–∞—Ä–∞ —Å–µ –≤—Ä–∞—Ç–∞'))
        markup.add(types.InlineKeyboardButton('–ù–µ–º–∞ –≤–æ–¥–µ', callback_data='–ù–µ–º–∞ –≤–æ–¥–µ'))
        markup.add(types.InlineKeyboardButton('–ù–µ —Ä–∞–¥–∏ –∫–ª–∏–º–∞ —É—Ä–µ—í–∞—ò', callback_data='–ù–µ —Ä–∞–¥–∏ –∫–ª–∏–º–∞ —É—Ä–µ—í–∞—ò'))
        bot.send_message(chat_id, '–ò–∑–∞–±–µ—Ä–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–∫–∏ –ø—Ä–æ–±–ª–µ–º:', reply_markup=markup)

    elif lang == 'montenegrin':
        markup.add(types.InlineKeyboardButton('Ne radi svjetlo', callback_data='Ne radi svjetlo'))
        markup.add(types.InlineKeyboardButton('Vrata se ne otvaraju', callback_data='Vrata se ne otvaraju'))
        markup.add(types.InlineKeyboardButton('Nema vode', callback_data='Nema vode'))
        markup.add(types.InlineKeyboardButton('Ne radi klima ureƒëaj', callback_data='Ne radi klima ureƒëaj'))
        bot.send_message(chat_id, 'Molimo izaberite tehniƒçki problem:', reply_markup=markup)

    elif lang == 'francus':

        markup.add(types.InlineKeyboardButton('La lumi√®re ne fonctionne pas', callback_data='La lumi√®re ne fonctionne pas'))
        markup.add(types.InlineKeyboardButton('La porte ne s\'ouvre pas', callback_data='La porte ne s\'ouvre pas'))
        markup.add(types.InlineKeyboardButton('Pas d\'eau', callback_data='Pas d\'eau'))
        markup.add(types.InlineKeyboardButton('Le climatiseur ne fonctionne pas',
                                              callback_data='Le climatiseur ne fonctionne pas'))
        bot.send_message(chat_id, 'Veuillez choisir le probl√®me technique:', reply_markup=markup)

    elif lang == 'polski':
        markup.add(types.InlineKeyboardButton('≈öwiat≈Ço nie dzia≈Ça', callback_data='≈öwiat≈Ço nie dzia≈Ça'))
        markup.add(types.InlineKeyboardButton('Drzwi siƒô nie otwierajƒÖ', callback_data='Drzwi siƒô nie otwierajƒÖ'))
        markup.add(types.InlineKeyboardButton('Brak wody', callback_data='Brak wody'))
        markup.add(types.InlineKeyboardButton('Klimatyzacja nie dzia≈Ça', callback_data='Klimatyzacja nie dzia≈Ça'))
        bot.send_message(chat_id, 'Proszƒô wybraƒá problem techniczny:', reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—â–∏—Ö –ø—Ä–æ–±–ª–µ–º
@bot.callback_query_handler(func=lambda call: call.data == '–†–µ—Å–µ–ø—à–Ω')
def reception(call):
    chat_id = call.message.chat.id
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ–±—â–∏—Ö –ø—Ä–æ–±–ª–µ–º
    markup = types.InlineKeyboardMarkup()

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(chat_id, 'english')

    # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if lang == 'english':
        markup.add(types.InlineKeyboardButton('Call a taxi', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(types.InlineKeyboardButton('Please come to the room', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Please choose your option:', reply_markup=markup)

    elif lang == 'russian':
        markup.add(types.InlineKeyboardButton('–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(
            types.InlineKeyboardButton('–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤–∞—Ä–∏–∞–Ω—Ç:', reply_markup=markup)

    elif lang == 'german':
        markup.add(types.InlineKeyboardButton('Taxi rufen', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(
            types.InlineKeyboardButton('Bitte kommen Sie ins Zimmer', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Bitte w√§hlen Sie Ihre Option:', reply_markup=markup)

    elif lang == 'spanish':
        markup.add(types.InlineKeyboardButton('Llamar a un taxi', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(types.InlineKeyboardButton('Por favor, ven a la habitaci√≥n',
                                              callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Por favor, elige tu opci√≥n:', reply_markup=markup)

    elif lang == 'serbian':
        markup.add(types.InlineKeyboardButton('–ü–æ–∑–≤–∞—Ç–∏ —Ç–∞–∫—Å–∏', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(types.InlineKeyboardButton('–ú–æ–ª–∏–º–æ –≤–∞—Å –¥–æ—í–∏—Ç–µ –¥–æ —Å–æ–±–µ', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, '–ú–æ–ª–∏–º–æ –≤–∞—Å –¥–∞ –∏–∑–∞–±–µ—Ä–µ—Ç–µ —Å–≤–æ—ò—É –æ–ø—Ü–∏—ò—É:', reply_markup=markup)

    elif lang == 'montenegrin':
        markup.add(types.InlineKeyboardButton('Pozvati taksi', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(
            types.InlineKeyboardButton('Molimo vas da doƒëete do sobe', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Molimo vas izaberite va≈°u opciju:', reply_markup=markup)

    elif lang == 'francus':
        markup.add(types.InlineKeyboardButton('Appeler un taxi', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(types.InlineKeyboardButton('S\'il vous pla√Æt, venez √† la chambre',
                                              callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Veuillez choisir votre option:', reply_markup=markup)

    elif lang == 'polski':
        markup.add(types.InlineKeyboardButton('Wezwaƒá taks√≥wkƒô', callback_data='–í—ã–∑–≤–∞—Ç—å —Ç–∞–∫—Å–∏'))
        markup.add(types.InlineKeyboardButton('Proszƒô przyjd≈∫ do pokoju', callback_data='–ü–æ–¥–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –Ω–æ–º–µ—Ä'))
        bot.send_message(chat_id, 'Proszƒô wybraƒá swojƒÖ opcjƒô:', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == '–°–æ–æ–±—â–µ–Ω–∏–µ')
def handle_special_query(call):
    chat_id = call.message.chat.id
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(chat_id, 'english')

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
    if lang == 'english':
        bot.send_message(chat_id, 'Please describe your issue:')
    elif lang == 'russian':
        bot.send_message(chat_id, '–û–ø–∏—à–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ:')
    elif lang == 'german':
        bot.send_message(chat_id, 'Bitte beschreiben Sie Ihr Problem selbst:')
    elif lang == 'spanish':
        bot.send_message(chat_id, 'Por favor, describe tu problema:')
    elif lang == 'serbian':
        bot.send_message(chat_id, '–ú–æ–ª–∏–º–æ –≤–∞—Å –¥–∞ —Å–∞–º–∏ –æ–ø–∏—à–µ—Ç–µ —Å–≤–æ—ò –ø—Ä–æ–±–ª–µ–º:')
    elif lang == 'montenegrin':
        bot.send_message(chat_id, 'Molimo vas da sami opi≈°ete svoj problem:')
    elif lang == 'francus':
        bot.send_message(chat_id, 'Veuillez d√©crire votre probl√®me vous-m√™me:')
    elif lang == 'polski':
        bot.send_message(chat_id, 'Proszƒô opisaƒá sw√≥j problem samodzielnie:')

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(call.message, process_user_message)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def process_user_message(message):
    global client_message
    chat_id = message.chat.id
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    user_input = message.text

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    lang = user_language.get(chat_id, 'english')

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –µ–≥–æ —è–∑—ã–∫–µ
    if lang == 'english':
        bot.send_message(chat_id, 'Your message has been received and recorded.')
    elif lang == 'russian':
        bot.send_message(chat_id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ –∏ –∑–∞–ø–∏—Å–∞–Ω–æ.')
    elif lang == 'german':
        bot.send_message(chat_id, 'Ihre Nachricht wurde empfangen und aufgezeichnet.')
    elif lang == 'spanish':
        bot.send_message(chat_id, 'Tu mensaje ha sido recibido y registrado.')
    elif lang == 'serbian':
        bot.send_message(chat_id, '–í–∞—à–∞ –ø–æ—Ä—É–∫–∞ —ò–µ –ø—Ä–∏–º—ô–µ–Ω–∞ –∏ –∑–∞–±–µ–ª–µ–∂–µ–Ω–∞.')
    elif lang == 'montenegrin':
        bot.send_message(chat_id, 'Va≈°a poruka je primljena i zabele≈æena.')
    elif lang == 'francus':
        bot.send_message(chat_id, 'Votre message a √©t√© re√ßu et enregistr√©.')
    elif lang == 'polski':
        bot.send_message(chat_id, 'Twoja wiadomo≈õƒá zosta≈Ça otrzymana i zarejestrowana.')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é send_to_admin)
    send_to_admin(user_input)
    global sending_message
    sending_message.append(user_input)
    if len(sending_message) > 3:
        send_to_admin(f'–ò–∑ –∫–æ–º–Ω–∞—Ç—ã {sending_message[1]} –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ  : {sending_message[3]}')

        sending_message = []
        one_more_time(message, lang)


bot.polling(non_stop=True)